{"name": "Открытие фильмографии для актера", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: Failed to decode response from marionette", "trace": "self = <tests.test_ui.TestKinopoiskUI object at 0x000002856DBE3AC0>\n\n    @allure.story(\"Навигация\")\n    @allure.title(\"Открытие фильмографии для актера\")\n    def test_open_filmography(self):\n        actor = \"Мэттью МакКонахи\"\n>       self.ui_page.open_filmography(actor)\n\ntests\\test_ui.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\kinopoisk_ui_page.py:95: in open_filmography\n    self.search_main_page_actor(actor)\npages\\kinopoisk_ui_page.py:23: in search_main_page_actor\n    search_input = self.wait_for_element((By.CSS_SELECTOR, 'input[name=\"kp_query\"]'))\npages\\base_page.py:76: in wait_for_element\n    return self.wait.until(\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:137: in until\n    value = method(self._driver)\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:224: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:898: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002856DCFBBD0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"Failed to decode response from marionette\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: Failed to decode response from marionette\n\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException"}, "steps": [{"name": "Открытие фильмографии для актёра ''Мэттью МакКонахи''", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: Failed to decode response from marionette\n\n", "trace": "  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\ASUS\\Desktop\\HW\\SkyPro\\coursework\\Kurs5\\kurs5\\kurs5\\kinopoisk_autotests\\pages\\kinopoisk_ui_page.py\", line 95, in open_filmography\n    self.search_main_page_actor(actor)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\ASUS\\Desktop\\HW\\SkyPro\\coursework\\Kurs5\\kurs5\\kurs5\\kinopoisk_autotests\\pages\\kinopoisk_ui_page.py\", line 23, in search_main_page_actor\n    search_input = self.wait_for_element((By.CSS_SELECTOR, 'input[name=\"kp_query\"]'))\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\ASUS\\Desktop\\HW\\SkyPro\\coursework\\Kurs5\\kurs5\\kurs5\\kinopoisk_autotests\\pages\\base_page.py\", line 76, in wait_for_element\n    return self.wait.until(\n           ~~~~~~~~~~~~~~~^\n        EC.visibility_of_element_located(locator),\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        message=f\"Элемент {locator} не появился\"\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 137, in until\n    value = method(self._driver)\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 224, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 898, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Поиск актера ''Мэттью МакКонахи'' на главной странице", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: Failed to decode response from marionette\n\n", "trace": "  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\ASUS\\Desktop\\HW\\SkyPro\\coursework\\Kurs5\\kurs5\\kurs5\\kinopoisk_autotests\\pages\\kinopoisk_ui_page.py\", line 23, in search_main_page_actor\n    search_input = self.wait_for_element((By.CSS_SELECTOR, 'input[name=\"kp_query\"]'))\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\ASUS\\Desktop\\HW\\SkyPro\\coursework\\Kurs5\\kurs5\\kurs5\\kinopoisk_autotests\\pages\\base_page.py\", line 76, in wait_for_element\n    return self.wait.until(\n           ~~~~~~~~~~~~~~~^\n        EC.visibility_of_element_located(locator),\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        message=f\"Элемент {locator} не появился\"\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 137, in until\n    value = method(self._driver)\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 224, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 898, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Ожидание появления элемента ('css selector', 'input[name=\"kp_query\"]')", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: Failed to decode response from marionette\n\n", "trace": "  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\ASUS\\Desktop\\HW\\SkyPro\\coursework\\Kurs5\\kurs5\\kurs5\\kinopoisk_autotests\\pages\\base_page.py\", line 76, in wait_for_element\n    return self.wait.until(\n           ~~~~~~~~~~~~~~~^\n        EC.visibility_of_element_located(locator),\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        message=f\"Элемент {locator} не появился\"\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 137, in until\n    value = method(self._driver)\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 224, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 898, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "locator", "value": "('css selector', 'input[name=\"kp_query\"]')"}], "start": 1744547241310, "stop": 1744547255445}], "parameters": [{"name": "actor", "value": "'Мэттью МакКонахи'"}], "start": 1744547241310, "stop": 1744547255445}], "parameters": [{"name": "actor", "value": "'Мэттью МакКонахи'"}], "start": 1744547241310, "stop": 1744547255446}], "start": 1744547241310, "stop": 1744547255447, "uuid": "f59f7b17-e28f-40d8-9c48-39b61c2f2c6d", "historyId": "e81e381578089dd6d37f754a1831af76", "testCaseId": "e81e381578089dd6d37f754a1831af76", "fullName": "tests.test_ui.TestKinopoiskUI#test_open_filmography", "labels": [{"name": "story", "value": "Навигация"}, {"name": "feature", "value": "UI Тесты Кинопоиска"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestKinopoiskUI"}, {"name": "host", "value": "DESKTOP-QEBLV6A"}, {"name": "thread", "value": "8504-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ui"}]}